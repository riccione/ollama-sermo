name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  BASE_NAME: ollama-sermo

jobs:
  build-release:
    name: build and upload binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            ext: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.0

    - name: Set the version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        override: true
        target: ${{ matrix.target }}
    
    - name: Add mingw64 to path for x86_64-gnu
      if: matrix.os == 'windows-latest'
      run: echo "C:\msys64\mingw64\bin" | Out-File -Append -Encoding ascii $env:GITHUB_PATH
      shell: pwsh

    - name: Cargo Check
      uses: actions-rs/cargo@v1
      with:
        command: check

    - name: Build binary
      uses: actions-rs/cargo@v1
      with:
        use-cross: false
        command: build
        args: --release --locked
   
    - name: Set artifact variables
      id: vars
      run: |
        echo "ARTIFACT_NAME=${{ env.BASE_NAME }}${{ matrix.ext }}" >> $GITHUB_OUTPUT
        echo "ASSET_NAME=${{ env.BASE_NAME }}_${{ matrix.target }}${{ matrix.ext }}" >> $GITHUB_OUTPUT
      shell: bash

    - name: List built files
      shell: bash
      run: ls -l target/release/

    - name: Rename binary to avoid conflict
      shell: bash
      run: |
        echo "Renaming ${{ steps.vars.outputs.ARTIFACT_NAME }} â†’ ${{ steps.vars.outputs.ASSET_NAME }}"
        mv target/release/${{ steps.vars.outputs.ARTIFACT_NAME }} target/release/${{ steps.vars.outputs.ASSET_NAME }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ steps.vars.outputs.ASSET_NAME }}
        asset_name: ${{ steps.vars.outputs.ASSET_NAME }}
        tag: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: "Automated release of ${{ github.ref_name }}"
        overwrite: true
